buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
        classpath 'io.fabric.tools:gradle:1.21.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://dl.bintray.com/optimizely/optimizely' }
}

dependencies {
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.nineoldandroids:library:2.4.0'


    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion '23.0.3'

    defaultConfig {
        applicationId 'co.valetapp'
        minSdkVersion 10
        targetSdkVersion 24
        versionCode 90000262
        versionName "2.5.12"
    }

    lintOptions {
//        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file("/Users/jdeffibaugh/.keystore")
            storePassword "deus ex machina; keystore"
            keyAlias "valet"
            keyPassword "deus ex machina; valet"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-valet.txt'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

//ext.versionCodes = ['armeabi':1, 'armeabi-v7a':2, 'arm64-v8a':3, 'mips':4, 'mips64':5,  'x86':6, 'x86_64': 7]
//
//import com.android.build.OutputFile
//
//android.applicationVariants.all { variant ->
//    // assign different version code for each output
//    variant.outputs.each { output ->
//        int abiVersionCode = project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) ?: 1
//        output.versionCodeOverride = abiVersionCode * 10000000 + android.defaultConfig.versionCode
//    }
//}